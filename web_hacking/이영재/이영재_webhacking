무차별 대입 공격(Brute-force attack)

암호학에서 특정한 암호를 풀기 위해 가능한 모든 값을 대입하는 것을 의미
대부분의 암호화 방식은 이론적으로 무차별 대입 공격에 대해 안전하지 못하며,
충분한 시간이 존재한다면 암호화된 정보를 해독할 수 있다. 그러나, 대부분의 경우
모든 계산을 마치려면 실용적이지 못한 시간이나 비용을 소요하게 되어, 공격을 방지한다.
암호의 '취약점' 이라는 의미에는 무차별 대입 공격보다 더 빠른 공격 방법이 존재하는 것을 의미한다.
대칭키 암호의 경우 암호에 사용된 키를 알아내면 암호화된 정보를 복원할 수 있고,
여기에서 사용한 키 길이에 따라 무차별 대입 공격의 최대 소요 시간이 정해진다.
암호화 키가 n비트일 경우 가능한 값은 최대 2^n가지가 존재한다.

커맨드 인젝션(Command Injection)

커맨드 인젝션은 웹 애플리케이션에서 시스템 명령을 사용할 때, 세미콜론 혹은 &,&&
을 사용하여 하나의 커맨드를 인젝션하여 두 개의 명령어가 실행되게 하는 공격이다.
OWASP TOP 10 중 1위에 속해 있는 Injection공격으로 서버자체의 콘솔 명령어를 실행시킬 수 
있기 때문에, 큰 피해가 발생할 수 있다.
현재 웹 애플리케이션에서는 서버의 파일을 cat명령어를 사용하여 사용자 입력과 함께 보여줄 수 있도록 만들어져 있다.
해커는 이 기능을 사용하여  ifconfig명령을 시키기 위해 웹페이지에 요청을 보낸 후 사용자로부터
요청을 아무런 검증없이 서버에 전송한다. 요청된 명령을 서버에서 실행하고, 서버의 민감정보를 그대로 노출한다.
이후 여러 명령어로 정보를 수집한 해커는 서버 내 라이브러리 중 원데이 취약점을 이용하여 리눅스 서버의 root권한을 획득한다.

CSRF attack(Cross-site request forgery attack)

크로스 사이트 요청위조 공격이란, 공격자가 유저가 사용하고 있는 웹 브라우저를 통해서
공격자가 조작한 HTTP request를 웹 서버에 보내는 공격이다. 공격에 성공하려면 공격자는
웹브라우저가 조작된 HTTP request를 보내도록 유도해야 한다.
CSRF와 XSS의 공통점은 사이트를 크로스한다는 것이다. 즉 웹사이트에 접속하는 사용자 입장에서 보면, CSRF와 XSS는
유사한 방식으로 공격이 이루어진다.
차이점은 XSS는 사용자 브라우저에서 스크립트가 실행되어 지는 것이며 CSRF는 브라우저에서 이미 접속한 웹어플리케이션에게 위조된
HTTP request와 같은 브라우저가 사용자가 원하지 않는 ACTION을 보내어 웹 어플리케이션 상태에서 수행된다.
즉, 동작방식은 유사하지만 최종 실행되어지는 방식 및 수행 코드가 다르다.
